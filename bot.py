import config 
import logging
from random import randint
import requests
import datetime
from pprint import pprint
from aiogram import types, md
from aiogram.dispatcher.filters import BoundFilter
from aiogram.utils.exceptions import CantRestrictSelf, CantRestrictChatOwner
from aiogram.dispatcher import filters

class IsAdminFilter(BoundFilter):
	key = "is_admin"

	def __init__(self, is_admin):
		self.is_admin = is_admin

	async def check(self, message: types.Message):
		member = await bot.get_chat_member(message.chat.id, message.from_user.id)
		return member.is_chat_admin()
from aiogram import Bot, executor, Dispatcher, types
from aiogram.utils.exceptions import ChatAdminRequired
#bot = Bot(config.TOKEN)
#dp = Dispatcher(bot)
#from filters import IsAdminFilter


logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)

dp.filters_factory.bind(IsAdminFilter)


@dp.message_handler(commands=["start", "–ø–∏–Ω–≥"])
async def help_message(message:types.Message):
	text = """–Ø —Ä–∞–±–æ—Ç–∞—é! –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É: 
/ban - –±–∞–Ω–∏—Ç —á–µ–ª–æ–≤–µ–∫–∞ 

/prefix *—Ç–µ–≥* - –≤—ã–¥–∞–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å 

/contact - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–µ–π–∫ –∫–æ–Ω—Ç–∞–∫—Ç

/profile - –ø—Ä–æ—Ñ–∏–ª—å —á–µ–ª–æ–≤–µ–∫–∞

/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–ª–æ–≤–µ–∫–µ

/dick - —É–∑–Ω–∞—Ç—å –¥–ª–∏–Ω—É —Å–≤–æ–µ–π *–±–∏–±—ã*

/getdick - –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–∑–Ω–∞—Ç—å –¥–ª–∏–Ω—É *–±–∏–±—ã* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

/gay - —É–∑–Ω–∞—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã *–≥–µ–π*

/getgay - –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *–≥–µ–π*

/dice - –±–æ—Ç –∫–∏–¥–∞–µ—Ç –∫—É–±–∏–∫

/ball - –±–æ—Ç –∫–∏–¥–∞–µ—Ç –º—è—á

/777 - –∏–≥—Ä–∞–µ—Ç –≤ –∫–∞–∑–∏–Ω–æ

/ochko - –±–æ—Ç –∏–≥—Ä–∞–µ—Ç –¥–∞—Ä—Ç—Å

/nigga - think about maaan

/link - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç

/start - –≤—ã–∑–≤–∞—Ç—å *—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ*"""
	await message.answer(text, parse_mode="Markdown")




@dp.message_handler(content_types=["new_chat_members"])
async def on_user_joined(message: types.Message):
	await message.delete()

@dp.message_handler(is_admin=True, commands=["ban"], commands_prefix="!/")
async def cmd_ban(message: types.Message):
	if not message.reply_to_message:
		await message.reply("–ó–∞–µ–±–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
		return


	await message.bot.delete_message(config.GROUP_ID, message.message_id)
	try:
		await message.bot.kick_chat_member(chat_id=config.GROUP_ID, user_id=message.reply_to_message.from_user.id)
		await message.reply_to_message.answer(f"{message.from_user.full_name} –æ—Ç—Å–æ—Å–∞–ª –∏ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
	except CantRestrictSelf:
		await message.answer("–¢—ã –¥–∞—É–Ω —á—Ç–æ–ª–∏?")
	except CantRestrictChatOwner:
		await message.answer("–≠—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–ª—è—Ç—å.")

@dp.message_handler(commands="dice")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")

@dp.message_handler(commands="ball")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üèÄ")

@dp.message_handler(commands="777")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé∞")

@dp.message_handler(commands="ochko")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üéØ")



@dp.message_handler(commands="nigga")
async def cmd_nigga(message: types.Message):
	pic = 'https://i.gifer.com/72nt.gif'
	await bot.send_document(message.chat.id, pic)

@dp.message_handler(commands=["prefix", "–ø—Ä–µ—Ñ"], commands_prefix="!/")
async def pref(message: types.Message):
	if not message.reply_to_message:
		await message.reply("–°—É–∫–∞, —Ä–µ–ø–ª–∞–µ–º.")
		return
	s = message.text.split(' ')
	try:
		await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=True)
		await bot.set_chat_administrator_custom_title(message.chat.id, message.reply_to_message.from_user.id, s[1])
		await message.reply(f"–í—ã–¥–∞–ª–∏ –ø—Ä–µ—Ñ—Ñ–∏–∫—Å *{s[1]}* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{message.reply_to_message.from_user.id}`", parse_mode="Markdown")
	except IndexError:
		await message.reply("–£–∫–∞–∂–∏ –ø—Ä–µ—Ñ–∏–∫—Å, –¥–æ–ª–±–æ–µ–±")
	except ChatAdminRequired:
		await message.reply("–î–æ–ª–±–æ–µ–±—ã, –≤—ã–¥–∞–π—Ç–µ –ø—Ä–∞–≤. –õ–∏–±–æ —é–∑–µ—Ä –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–µ –º–Ω–æ–π.")
@dp.message_handler(commands=["unprefix","—É–Ω–ø—Ä–µ—Ñ"], commands_prefix="!/")
async def unpref(message: types.Message):
	if not message.reply_to_message:
		await message.reply("–°—É–∫–∞, —Ä–µ–ø–ª–∞–µ–º.")
		return
	try:
		await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=False)
		await message.reply(f"–°–ø–∏–∑–¥–∏–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å —É —é–∑–µ—Ä–∞ `{message.reply_to_message.from_user.id}`", parse_mode="Markdown")
	except ChatAdminRequired:
		await message.reply("–î–æ–ª–±–æ–µ–±—ã, –≤—ã–¥–∞–π—Ç–µ –ø—Ä–∞–≤. –õ–∏–±–æ —é–∑–µ—Ä –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–µ –º–Ω–æ–π.")
@dp.message_handler(commands=["link", "–ª–∏–Ω–∫"], commands_prefix="!/")
async def getlink(message: types.Message):
	link = await bot.export_chat_invite_link(config.GROUP_ID)
	await message.reply(f"–°—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç: {link}")
@dp.message_handler(commands=["–∫–æ–Ω—Ç–∞–∫—Ç","contact"], commands_prefix='/!')
async def contact(message: types.Message):
	rnum = randint(1,9)
	snek = str(rnum)*7
	await message.reply_contact(f'+9 (98) {snek}',message.from_user.first_name)
@dp.message_handler(text=["üé≤"])
async def counter(message:types.Message):
	await message.answer(f"{md.escape_md(message.from_user.id)} –Ω–∞–±—Ä–∞–ª {message.dice.value} –æ—á–∫–æ–≤")

@dp.message_handler(commands=["dick"])
async def dicc(message: types.Message):
	length = randint(1,50)
	await message.reply(f"–¢–≤–æ—è –±–∏–±–∞ *{length}* —Å–º", parse_mode="MarkdownV2")
@dp.message_handler(commands=["gay"])
async def gay(message: types.Message):
	percent = randint(1,100)
	await message.reply(f"üè≥Ô∏è‚Äçüåà–ü–æ—Ö–æ–∂–µ, —Ç—ã –≥–µ–π –Ω–∞ *{percent}*%", parse_mode="MarkdownV2")
@dp.message_handler(is_reply=True,commands=["getdick"])
async def getdicc(message: types.Message):
	member = await bot.get_chat_member(message.chat.id,message.reply_to_message.from_user.id)
	name = md.escape_md(member.user.first_name)
	length = randint(1,50)
	await message.reply(f"–ë–∏–±–∞ {name}  *{length}* —Å–º", parse_mode="MarkdownV2")
@dp.message_handler(is_reply=True,commands=["getgay"])
async def getgay(message: types.Message):
	member = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
	name = md.escape_md(member.user.first_name)
	percent = randint(1,100)
	await message.reply(f"üè≥Ô∏è‚Äçüåà–ü–æ—Ö–æ–∂–µ, {name} –≥–µ–π –Ω–∞ *{percent}*%", parse_mode="MarkdownV2")
@dp.message_handler(commands=["staff"])
async def staff(message: types.Message):
	admins = await bot.get_chat_administrators(message.chat.id)
@dp.message_handler(commands=["id"])
async def get_id(message: types.Message):
	idd = md.code(message.from_user.id)
	await message.answer(f"–¢–≤–æ–π *ID*: {idd}", parse_mode="Markdown")
@dp.message_handler(is_reply=True, commands=["getid"])
@dp.message_handler(filters.IsReplyFilter(True), commands='getid')
async def getid(message: types.Message):
	user_id = md.code(message.reply_to_message.from_user.id)
	await message.answer(f"*ID* —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}", parse_mode="Markdown")

@dp.message_handler(is_reply=True,commands=["info","–∏–Ω—Ñ–æ"])
async def info(message: types.Message):
	reply_user = message.reply_to_message.from_user
	user_id = reply_user.id
	member = await bot.get_chat_member(message.chat.id, user_id)
	status = member.status
	title = member.custom_title
	userid = md.code(member.user.id)
	if title == None:
		title = "–ù–µ—Ç"
	if member.user.id in [837582349, 1056861593]:
		status = "–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞"
	elif member.status == "creator":
		status = "–°–æ–∑–¥–∞—Ç–µ–ª—å"
	elif member.status == "administrator":
		status = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
	elif member.status == "member":
		status = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
		title = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
	elif member.status == "restricted":
		status = "–û–≥—Ä–∞–Ω–∏—á–µ–Ω"
	fullname = md.escape_md(reply_user.full_name)
	username = reply_user.username
	lang = reply_user.language_code
	mention = reply_user.get_mention()
	if username == None:
		username = "–ù–µ—Ç"
	is_bot = reply_user.is_bot
	if is_bot == True:
		is_bot = "–î–∞"
	elif is_bot == False:
		is_bot = "–ù–µ—Ç"
	try:
		gpph = await bot.get_user_profile_photos(user_id, limit=1)
		gpl = gpph["photos"]
		for lol in gpl:
			pass
		msg = lol[0]
		file_id = msg["file_id"]
		text = f"""*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:*
*–ê–≤–∞—Ç–∞—Ä–∫–∞*: –í—ã—à–µ
*–ü–æ–ª–Ω–æ–µ –∏–º—è*: {fullname}
*ID*: {userid}
*–Æ–∑–µ—Ä*: @{md.escape_md(username)}
*–ë–æ—Ç? *: {is_bot}
*–Ø–∑—ã–∫*: {lang}
*–°—Ç–∞—Ç—É—Å*: {status}
*–ó–≤–∞–Ω–∏–µ*: {title}
*–ü–µ—Ä–º–∞–ª–∏–Ω–∫*: [–∫–ª–∏–∫](tg://user?id={user_id})"""
		await bot.send_photo(message.chat.id, file_id,caption=text, parse_mode="MarkdownV2")
	except UnboundLocalError:
		textnophoto=f"""*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:*
*–ê–≤–∞—Ç–∞—Ä–∫–∞*: –ù–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
*–ü–æ–ª–Ω–æ–µ –∏–º—è*: {fullname}
*ID*: {userid}
*–Æ–∑–µ—Ä*: @{md.escape_md(username)}
*–ë–æ—Ç? *: {is_bot}
*–Ø–∑—ã–∫*: {lang}
*–°—Ç–∞—Ç—É—Å*: {status}
*–ó–≤–∞–Ω–∏–µ*: {title}
*–ü–µ—Ä–º–∞–ª–∏–Ω–∫*: [–∫–ª–∏–∫](tg://user?id={user_id})"""
		await bot.send_message(message.chat.id, textnophoto, parse_mode="MarkdownV2")

@dp.message_handler(commands=["profile", "–ø—Ä–æ—Ñ–∏–ª—å"])
async def profile(message: types.Message):
	member = await bot.get_chat_member(message.chat.id, message.from_user.id)
	status = member.status
	title = member.custom_title
	user_id = member.user.id
	if title == None:
		title = "–ù–µ—Ç"
	username = member.user.username
	if member.user.id in [837582349, 1056861593]:
		status = "–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞"
	elif member.status == "creator":
		status = "–°–æ–∑–¥–∞—Ç–µ–ª—å"
	elif member.status == "administrator":
		status = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
	elif member.status == "member":
		status = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
		title = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
	elif member.status == "restricted":
		status = "–û–≥—Ä–∞–Ω–∏—á–µ–Ω"
	await message.reply(f"–ü—Ä–æ—Ñ–∏–ª—å {md.escape_md(member.user.full_name)}\n\n–°—Ç–∞—Ç—É—Å: {status}\n–ó–≤–∞–Ω–∏–µ: {title}\nID: {user_id}\n–Æ–∑–µ—Ä: @{username}")




if __name__ == '__main__':
    print("BOT was started.")
    executor.start_polling(dp, skip_updates=True)
